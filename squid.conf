# replace these two lines in /etc/squid/squid.conf
# access_log stdio:/var/log/squid/access.log
# access_log stdio:/var/log/squid/user_agent.log useragent
# with
# access_log udp://<your logstash server>:1516
# access_log udp://<your logstash server>:1515 useragent
input {
  udp {
    id => "proxy-input-useragent"
    port => 1515
    type => useragent
  }    
  udp {
    id => "proxy-input"
    port => 1516
    type => proxy
  }
}
filter {
  # @timestamp will get replaced with each line's timestamp, copy it here so we know when messages are coming in
  mutate {
    id => "proxy-mutate-received_at"
    add_field => { "received_at" => "%{@timestamp}" }
  }
  split {
    id => "proxy-split"
  }      
  if [type] == "proxy" {
    grok {
      id => "proxy-grok"
      match => [ "message",
        "%{NUMBER:timestamp}%{SPACE}%{NUMBER:request_msec:float} %{IPORHOST:src_ip} %{WORD}/%{NUMBER:response_status:int} %{NUMBER:response_size} %{WORD:http_method} (%{URIPROTO:http_proto}://)?%{IPORHOST:dst_host}(?::%{POSINT:port})?(?:%{NOTSPACE:uri_param})? %{USERNAME:user} %{WORD}/(%{IPORHOST:dst_ip}|-)%{GREEDYDATA:content_type}" 
      ]
    }
    if [dst_ip] {
      geoip {
        id => "proxy-geoip"
        source => "dst_ip"
        target => "dst_geoip"
      }
    }    
    date {
      id => "proxy-date"
      match => [ "timestamp", "UNIX" ]
    }    
  }
  else if [type] == "useragent" {
    grok {
      id => "proxy-useragent-grok"
      match => [ "message", 
        "%{IPORHOST:src_ip}%{SPACE}\[%{HTTPDATE:timestamp}\]%{SPACE}\"%{DATA:user_agent}\""
      ]
    }
    useragent {
      id => "proxy-useragent-useragent"
      source => "[user_agent]"
      target => "useragent"
      remove_field => "user_agent"
    }
    date {
      id => "proxy-useragent-date"
      match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
    }
  }
  # add local dns reverse lookup placeholders
  if [src_ip] {
    mutate {
      id => "proxy-mutate"
      add_field => {
        "[src_hostname]" => "%{[src_ip]}"
      }
    }
    # do reverse dns on known ip fields
    dns {
      id => "proxy-reverse-dns"
      reverse => [ "[src_hostname]" ]
      action => "replace"
      hit_cache_size => 100
      hit_cache_ttl => 86400
    }
  }
}
output {
  elasticsearch {
    id => "proxy-output-es"
    hosts => "localhost:9200"
    manage_template => false
    index => "proxy-%{+YYYY.MM.dd}"
  }
}
